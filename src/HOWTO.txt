first, run something like:

$ ./measure_wasp4b_times_brik.sh &> ../logs/4b.log &

which does:

  ```
  n_sector=2
  lcdir='/home/luke/local/tess_alert_lightcurves/sector-'${n_sector}'/'
  chain_savdir='/home/luke/local/emcee_chains/'
  n_mcmc=250
  n_workers=16 # number of workers on ast!

  ticid=402026209 # WASP-4b
  python measure_transit_times_from_lightcurve.py \
    --ticid $ticid --sectornum $n_sector --n_mcmc_steps $n_mcmc \
    --no-getspocparams --read_literature_params \
    --overwritesamples --no-mcmcprogressbar \
    --nworkers $n_workers --chain_savdir $chain_savdir --lcdir $lcdir
  ```

then,

$ python retrieve_measured_times.py --ticid 402026209

then,

$ python make_parameter_vs_epoch_plots.py

which does an important thing: writes the SELECTED data points to a new csv
file. It also computes the epochs.  It also OPTIONALLY rescales the transit
midtime error bars so that chi_red^2 = 1.  You must look at the
"WASP-18b_tess_errorbar_check.png" to check whether this seems worth the method
hockiness (usally if chi^2 red is near 1 without it, there should be no need).


then, at `WASP-4b/src/compute_planet_star_parameters.py`

$ python compute_planet_star_parameters.py


Then run the model comparison script:
(this requires some fine-tuning of the precession model's initial parameters.)

$ python model_comparison_linear_quadratic_precession.py | tee ../results/model_comparison/WASP-4b/model_comparison_output.txt


----------

Then you probably want to remake all your figures and tables:

`./make_all`
----------

Or you might want to run your timing validation tests:

python verify_time_stamps.py > ../results/verify_tess_timestamps/verify_output.txt &
